name: 构建

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x64]
        os: [ubuntu-20.04, windows-latest, macos-13]
        exclude:
          - os: ubuntu-20.04
            arch: x86
          - os: macos-13
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data *.ui:. `
            --add-data LICENSE:. `
            --add-data plugins:plugins
      - name: Run Linux build
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.ico \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data *.ui:. \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import numpy

      - name: Run macOS build
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.icns \
            -n "Class Widgets" \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data *.ui:. \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import numpy
          mkdir dist-bundle
          cp -r "dist/Class Widgets.app" "dist-bundle/Class Widgets.app"
      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}

          path: ./dist/
      - name: Upload macOS Bundle
        uses: actions/upload-artifact@v4.4.2
        with: 
          name: macos-13-x64-bundle
          path: ./dist-bundle/

  self-hosted:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: 创建虚拟环境
        run: |
          /home/actions/.pyenv/versions/3.8.10/bin/python -m venv venv
          source ./venv/bin/activate
          pip install -r requirements.linux.txt
          pip install pyinstaller

      - name: 使用 PyInstaller 打包
        run: |
          source ./venv/bin/activate
          pyinstaller main.py -w -i ./img/favicon.ico -n ClassWidgets --contents-directory . --add-data config:config --add-data audio:audio --add-data img:img --add-data ui:ui --add-data font:font --add-data *.ui:. --add-data LICENSE:. --add-data plugins:plugins

      - name: 存到构建输出
        uses: actions/upload-artifact@v4.4.2
        with:
          name: debian10-x64
          path: ./dist/
