name: 构建

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64 ]
        os: [ ubuntu-20.04, windows-latest, macos-13 ]
        exclude:
          - os: ubuntu-20.04
            arch: x86
          - os: macos-13
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      - name: Setup upx (win32)
        if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x86' }}
        run: |
          curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win32.zip
          tar -xvzf upx.zip
          ren upx-4.2.4-win32 upx
      - name: Setup upx (win64)
        if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x64' }}
        run: |
          curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip
          tar -xvzf upx.zip
          ren upx-4.2.4-win64 upx
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          uv venv
          .venv\Scripts\activate
          copy upx/upx.exe .venv/Scripts/
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import PyQt5.QtWebEngine `
            --hidden-import plyer.platforms.win.notification

      - name: Run Linux build
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.ico \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import plyer.platforms.linux.notification

      - name: Run macOS build
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.icns \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import=plyer.platforms.macosx.notification
          mkdir bundle
          mv dist/ClassWidgets.app bundle/Class\ Widgets.app

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: ./dist
      - name: Upload macOS Bundle
        if: ${{ matrix.os == 'macos-13' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: macos-13-bundle
          path: ./bundle

  self-hosted:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up python
        run: |
          /home/actions/.pyenv/versions/3.8.10/bin/python -m venv venv
          source ./venv/bin/activate
          pip install -r requirements.linux.txt
          pip install pyinstaller

      - name: Run Linux (Debian 10) build
        run: |
          source ./venv/bin/activate
          pyinstaller main.py \
            -w \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import plyer.platforms.linux.notification

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: debian10-x64
          path: ./dist

  sync2s3:
    runs-on: windows-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
      - name: Sync to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}