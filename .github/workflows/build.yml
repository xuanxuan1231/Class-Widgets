name: 构建

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
 
jobs:
  builder_matrix:
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x64 ]
        os: [ ubuntu-20.04, windows-latest, macos-13 ]
        exclude:
          - os: ubuntu-20.04
            arch: x86
          - os: macos-13
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.8.10'
          architecture: ${{ matrix.arch }}
      - name: Setup uv
        uses: astral-sh/setup-uv@v4
      # - name: Setup upx (win32)
      #   if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x86' }}
      #   run: |
      #     curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win32.zip
      #     tar -xvzf upx.zip
      #     ren upx-4.2.4-win32 upx
      # - name: Setup upx (win64)
      #   if: ${{ matrix.os == 'windows-latest' && matrix.arch == 'x64' }}
      #   run: |
      #     curl -o upx.zip -L https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip
      #     tar -xvzf upx.zip
      #     ren upx-4.2.4-win64 upx
      - name: Run Windows build
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          uv venv
          .venv\Scripts\activate
          uv pip install -r requirements.txt
          uv pip install pyinstaller
          pyinstaller main.py `
            -w `
            -i ./img/favicon.ico `
            -n ClassWidgets `
            --contents-directory . `
            --add-data config:config `
            --add-data audio:audio `
            --add-data img:img `
            --add-data ui:ui `
            --add-data font:font `
            --add-data view:view `
            --add-data LICENSE:. `
            --add-data plugins:plugins `
            --hidden-import PyQt5.QtWebEngine `
            --hidden-import plyer.platforms.win.notification

      - name: Run Linux build
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.ico \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import plyer.platforms.linux.notification

      - name: Run macOS build
        if: ${{ matrix.os == 'macos-13' }}
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -i ./img/favicon.icns \
            -n "Class Widgets" \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import plyer.platforms.macosx.notification
          mkdir bundle
          mv dist/Class\ Widgets.app bundle/Class\ Widgets.app

      - name: Upload unsigned application
        uses: actions/upload-artifact@v4.4.2
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }} (Unsigned)
          path: ./dist
      - name: Upload unsigned single file
        if: ${{ matrix.os == 'windows-latest' }}
        id: upload-unsigned-artifact
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }} (Unsigned single)
          path: ./dist/ClassWidgets/ClassWidgets.exe
      - name: Upload macOS Bundle
        if: ${{ matrix.os == 'macos-13' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: macos-13-bundle
          path: ./bundle
      - name: Sign application (Test)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'test-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Sign application (Release)
        if: ${{ matrix.os == 'windows-latest' && startsWith(github.ref, 'refs/tags/') }}
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '2e13633d-4e7d-4462-9091-27536751c84c'
          project-slug: 'Class-Widgets.git'
          signing-policy-slug: 'release-signing'
          github-artifact-id: '${{ steps.upload-unsigned-artifact.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: './dist/ClassWidgets'
      - name: Upload signed application
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4.4.2
        with:
          name: windows-${{ matrix.arch }} (Signed)
          path: ./dist

  debian:
    runs-on: ubuntu-latest
    container:
      image: debian:10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
      - name: Setup uv & python
        uses: astral-sh/setup-uv@v4
        with:
          python-version: 3.8.10
      - name: Install dependencies
        shell: bash
        run: |
          apt update
          apt install -y binutils libglib2.0-dev libfreetype6 libxfixes3 libgssapi-krb5-2 libdbus-1-3 libxext6 libfontconfig1 libxrandr2 libnspr4 libx11-xcb1 libxrender1 libasound2 libxkbcommon0 libxtst6 libnss3 libxdamage1 libxcomposite1 libcups2 libwayland-client0 libwayland-cursor0 libcairo2 libcairo-gobject2 libpango-1.0-0 libgtk-3-0 libgdk-pixbuf2.0-0 libgdk-3-0 libxkbcommon-x11-0 libwayland-egl1
      - name: Run Linux (Debian 10) build
        shell: bash
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install -r  requirements.linux.txt
          uv pip install pyinstaller
          pyinstaller main.py \
            -w \
            -n ClassWidgets \
            --contents-directory . \
            --add-data config:config \
            --add-data audio:audio \
            --add-data img:img \
            --add-data ui:ui \
            --add-data font:font \
            --add-data view:view \
            --add-data LICENSE:. \
            --add-data plugins:plugins \
            --hidden-import PyQt5.QtWebEngine \
            --hidden-import plyer.platforms.linux.notification

      - name: Upload
        uses: actions/upload-artifact@v4.4.2
        with:
          name: debian10-x64
          path: ./dist
